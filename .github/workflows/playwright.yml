name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    # Setup .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    # Build and start backend server
    - name: Build backend
      run: dotnet build Ivy.Samples/Ivy.Samples.csproj
    
    - name: Start backend server
      run: |
        dotnet run --project Ivy.Samples/Ivy.Samples.csproj -- --port 5010 --silent &
        echo $! > backend.pid
        # Wait for server to be ready
        timeout 30 bash -c 'until curl -f http://localhost:5010/ > /dev/null 2>&1; do sleep 1; done'
    
    # Setup Node.js and frontend
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Install Playwright Browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps
    
    - name: Start frontend dev server
      working-directory: ./frontend
      run: |
        npm run dev &
        echo $! > frontend.pid
        # Wait for frontend to be ready
        timeout 30 bash -c 'until curl -f http://localhost:5173/ > /dev/null 2>&1; do sleep 1; done'
    
    # Update Playwright config to use the frontend server
    - name: Configure Playwright for frontend
      working-directory: ./frontend
      run: |
        # Create a temporary config that points to our frontend
        cat > playwright.config.frontend.ts << 'EOF'
        import { defineConfig, devices } from '@playwright/test';
        
        export default defineConfig({
          testDir: './e2e',
          fullyParallel: true,
          forbidOnly: !!process.env.CI,
          retries: process.env.CI ? 2 : 0,
          workers: process.env.CI ? 1 : undefined,
          reporter: 'html',
          use: {
            baseURL: 'http://localhost:5173',
            trace: 'on-first-retry',
          },
          projects: [
            {
              name: 'chromium',
              use: { ...devices['Desktop Chrome'] },
            },
          ],
        });
        EOF
    
    - name: Run Playwright tests
      working-directory: ./frontend
      run: npx playwright test --config=playwright.config.frontend.ts
    
    # Cleanup servers
    - name: Stop servers
      if: always()
      run: |
        if [ -f backend.pid ]; then
          kill $(cat backend.pid) || true
          rm backend.pid
        fi
        if [ -f frontend.pid ]; then
          kill $(cat frontend.pid) || true
          rm frontend.pid
        fi
    
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30
